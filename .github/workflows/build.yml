name: Build
on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: github
          cache: 'gradle'
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.4
      - name: KtLint
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: lintKotlin --continue --stacktrace
          gradle-version: wrapper
      - name: Detekt
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: detekt --continue --stacktrace
          gradle-version: wrapper
  binary-compatibility:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: github
          cache: 'gradle'
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.4
      - name: Check binary Compatibility
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: apiCheck
          gradle-version: wrapper
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: github
          cache: 'gradle'
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.4
      - name: Build with Gradle
        uses: burrunan/gradle-cache-action@v1
        env:
          OSSRH_SIGNING_KEY: ${{ secrets.OSSRH_SIGNING_KEY }}
          OSSRH_SIGNING_PASSWORD: ${{ secrets.OSSRH_SIGNING_PASSWORD }}
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          arguments: clean --no-configuration-cache build -x apiCheck -x allTests -x jvmTest -x lintKotlin
          gradle-version: wrapper