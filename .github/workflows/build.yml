name: Build
on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:
jobs:
  check:
    name: Lint Codebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: github
          cache: 'gradle'
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.4
      - name: KtLint
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: lintKotlin --continue --stacktrace
          gradle-version: wrapper
      - name: Detekt
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: detekt --continue --stacktrace
          gradle-version: wrapper
      - name: Install reviewdog
        uses: reviewdog/action-setup@v1
        if: ${{ failure() }}
        continue-on-error: true
      - name: Collect results
        if: ${{ failure() }}
        continue-on-error: true
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew formatKotlin
          TMPFILE=$(mktemp)
          git diff >"${TMPFILE}"
          ./gradlew lintKotlin --continue || true
          ./gradlew detekt --continue || true
          git stash -u && git stash drop || true
          reviewdog -name="ktlint" -f=diff -f.diff.strip=1 -reporter="github-pr-review" < "${TMPFILE}"
          cat ${{ github.workspace }}/build/reports/ktlint/main-lint.xml | reviewdog -f=checkstyle -name="ktlint" -reporter="github-pr-review" -level="error" -filter-mode="added" -fail-on-error="false"
          cat ${{ github.workspace }}/build/reports/detekt/detekt.xml | reviewdog -f=checkstyle -name="detekt" -reporter="github-pr-review" -level="error" -filter-mode="added" -fail-on-error="false"
      - name: Generate coverage report
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: koverXmlReport --continue --stacktrace
          gradle-version: wrapper
      - name: Upload coverage to Codecov
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ github.workspace }}/build/reports/kover/report.xml
          verbose: true
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: github
          cache: 'gradle'
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.4
      - name: Build with Gradle
        uses: burrunan/gradle-cache-action@v1
        env:
          OSSRH_SIGNING_KEY: ${{ secrets.OSSRH_SIGNING_KEY }}
          OSSRH_SIGNING_PASSWORD: ${{ secrets.OSSRH_SIGNING_PASSWORD }}
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          arguments: clean --no-configuration-cache build -x allTests -x jvmTest -x lintKotlin
          gradle-version: wrapper